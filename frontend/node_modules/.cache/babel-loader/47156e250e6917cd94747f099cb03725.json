{"ast":null,"code":"import _slicedToArray from \"/Users/agnesaavetyan/Desktop/42-transcendence/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/agnesaavetyan/Desktop/42-transcendence/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _this = this,\n  _jsxFileName = \"/Users/agnesaavetyan/Desktop/42-transcendence/frontend/src/components/SettingPage.tsx\";\nimport React, { useState } from \"react\";\nimport { ChangeProfileImage } from \"./ChangeProfileImage\";\nimport { SPAchievements } from \"./SPAchievements\";\nimport { SPHistory } from \"./SPHistory\";\nvar SettingPage = function SettingPage(_ref) {\n  _objectDestructuringEmpty(_ref);\n  //   const [updatedSettings, setUpdatedSettings] = useState(settings);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    updatedSettings = _useState2[0],\n    setUpdatedSettings = _useState2[1];\n  var handleSave = function handleSave() {\n    // onSave(updatedSettings);\n  };\n  var handleSettingChange = function handleSettingChange(index, event) {\n    // const newSettings = [...updatedSettings];\n    // newSettings[index].value = event.target.value;\n    // setUpdatedSettings(newSettings);\n    setUpdatedSettings(true);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      // position: \"absolute\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      display: 'flex',\n      padding: '0 20px',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      boxSizing: \"border-box\",\n      left: 0,\n      right: 0,\n      top: 0,\n      position: \"relative\",\n      height: \"896px\",\n      background: \"#B12D2D\",\n      border: \"1px solid #661212\",\n      borderRadius: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChangeProfileImage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SPAchievements, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SPHistory, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: \"30px\"\n    },\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Save\"));\n};\nexport default SettingPage;","map":{"version":3,"names":["React","useState","ChangeProfileImage","SPAchievements","SPHistory","SettingPage","updatedSettings","setUpdatedSettings","handleSave","handleSettingChange","index","event","backgroundSize","backgroundRepeat","backgroundPosition","display","padding","flexDirection","justifyContent","boxSizing","left","right","top","position","height","background","border","borderRadius","fontSize"],"sources":["/Users/agnesaavetyan/Desktop/42-transcendence/frontend/src/components/SettingPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ChangeProfileImage } from \"./ChangeProfileImage\";\nimport { SPAchievements } from \"./SPAchievements\";\nimport { SPHistory } from \"./SPHistory\";\n\ntype Setting = {\n    name: string;\n    value: string;\n};\n\ntype SettingProps = {\n    settings: Setting[];\n    onSave: (settings: Setting[]) => void;\n};\n\nconst SettingPage: React.FC = ({ }) => {\n    //   const [updatedSettings, setUpdatedSettings] = useState(settings);\n    const [updatedSettings, setUpdatedSettings] = useState(false);\n\n\n    const handleSave = () => {\n        // onSave(updatedSettings);\n    };\n\n    const handleSettingChange = (index: number, event: React.ChangeEvent<HTMLInputElement>) => {\n        // const newSettings = [...updatedSettings];\n        // newSettings[index].value = event.target.value;\n        // setUpdatedSettings(newSettings);\n        setUpdatedSettings(true);\n    };\n\n    return (\n        <div\n            style={{\n                // position: \"absolute\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                display: 'flex',\n                padding: '0 20px',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                boxSizing: \"border-box\",\nleft: 0,\nright: 0,\ntop: 0,\n                position: \"relative\",\n                height: \"896px\",\n\n                background: \"#B12D2D\",\n                border: \"1px solid #661212\",\n                borderRadius: \"12px\",\n            }}>\n            <ChangeProfileImage/>\n            <SPAchievements/>\n            <SPHistory/>\n   \n            {/* {updatedSettings.map((setting, index) => (\n                <div key={setting.name}>\n                    <label \n                    htmlFor={setting.name}>{setting.name}:</label>\n                    <input\n                        type=\"text\"\n                        id={setting.name}\n                        value={setting.value}\n                        onChange={(e) => handleSettingChange(index, e)}\n                    />\n                </div>\n            ))} */}\n            {/* {updatedSettings.map((setting, index) => (\n                <div key={index}> */}\n            <label>\n                {/* {setting.name}\n                        <input type=\"text\" ></input>\n                        value={setting.value} onChange={(event) => handleSettingChange(index, event)} /> */}\n            </label>\n            {/* </div>))} */}\n            <button\n                style={{ fontSize: \"30px\" }}\n                onClick={handleSave}>\n                Save\n            </button>\n        </div >\n    );\n};\n\nexport default SettingPage;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,aAAa;AAYvC,IAAMC,WAAqB,GAAG,SAAxBA,WAAqB,OAAY;EAAA;EACnC;EAAA,gBAC8CJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtDK,eAAe;IAAEC,kBAAkB;EAG1C,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrB;EAAA,CACH;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,KAAa,EAAEC,KAA0C,EAAK;IACvF;IACA;IACA;IACAJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACI;IACI,KAAK,EAAE;MACH;MACAK,cAAc,EAAE,OAAO;MACvBC,gBAAgB,EAAE,WAAW;MAC7BC,kBAAkB,EAAE,QAAQ;MAC5BC,OAAO,EAAE,MAAM;MACfC,OAAO,EAAE,QAAQ;MACjBC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,eAAe;MAC/BC,SAAS,EAAE,YAAY;MACvCC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE,CAAC;MACUC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,OAAO;MAEfC,UAAU,EAAE,SAAS;MACrBC,MAAM,EAAE,mBAAmB;MAC3BC,YAAY,EAAE;IAClB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACF,oBAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACrB,oBAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACjB,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAgBZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAIQ,eAER;IACI,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAC5B,OAAO,EAAEpB,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAEzB,CAAS,CACN;AAEf,CAAC;AAED,eAAeH,WAAW"},"metadata":{},"sourceType":"module"}